# -*- coding: utf-8 -*-
"""Prodigy_ML_02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kmpex5WY9FwuEN_P_Q6UuYk0DmjozXXv
"""

import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from sklearn import preprocessing
import numpy as np

# Load the dataset
file_path = "/content/drive/MyDrive/prodigy infotech/Mall_Customers.csv"
df = pd.read_csv(file_path)
df.head()
df.describe()
plt.scatter(df['Annual Income (k$)'], df['Spending Score (1-100)'])
plt.show()

print(df.isnull().sum())
customers_data = df.iloc[:,[3,4]].values
label_encoder = LabelEncoder()
df['Gender'] = label_encoder.fit_transform(df['Gender'])
df.head()

data_scaled = preprocessing.scale(df.iloc[:, [3, 4]])
kmeans = KMeans(2)
kmeans.fit(data_scaled)
clusters = pd.DataFrame(data_scaled, columns=['Feature1', 'Feature2'])
clusters['Cluster_pred'] = kmeans.fit_predict(data_scaled)
WCSS = []

for i in range(1, 10):
    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)
    kmeans.fit(data_scaled)
    WCSS.append(kmeans.inertia_)

sns.set()
plt.plot(range(1, 10), WCSS)
plt.title('The Elbow Point Graph')
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS')
plt.show()

# Select relevant features for clustering
features = df[['Annual Income (k$)', 'Spending Score (1-100)']]

# Standardize the features
scaler = StandardScaler()
scaled_features = scaler.fit_transform(features)

# Apply K-means clustering
kmeans = KMeans(n_clusters=5, random_state=42)
df['cluster'] = kmeans.fit_predict(scaled_features)

# Visualize the clusters
plt.scatter(df['Annual Income (k$)'], df['Spending Score (1-100)'], c=df['cluster'], cmap='viridis')
plt.title('K-means Clustering of Mall Customers')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.show()